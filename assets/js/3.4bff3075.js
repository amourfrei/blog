(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{55:function(e,t,i){"use strict";i.r(t);var s=i(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"git-commit-types"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-types","aria-hidden":"true"}},[e._v("#")]),e._v(" git commit types.")]),i("ul",[i("li",[e._v("feat: A new feature.")]),i("li",[e._v("fix: A bug fix.")]),i("li",[e._v("docs: Documentation only changes")]),i("li",[e._v("style: Changes that do not affect the meaning of the code (white-space, formatting, missing emi-colons, etc.)")]),i("li",[e._v("refactor: A code change that neither fixes a bug nor adds a feature.")]),i("li",[e._v("perf: A code change that improves performance.")]),i("li",[e._v("test: Adding missing tests or correcting existing tests.")]),i("li",[e._v("build: Changes that affect the build system or external dependencies (example scopes: gulp, webpack, npm)")]),i("li",[e._v("ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabes)")]),i("li",[e._v("chore: Other changes that don't modify src or test files.")]),i("li",[e._v("revert: Reverts a previous commit.")])])])}],!1,null,null,null);t.default=a.exports}}]);